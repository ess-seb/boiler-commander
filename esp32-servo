esphome:
  #name: esphome-web-06e4a8
  name: esp32-servo
  friendly_name: ESP32 Servo

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino



# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "MwupUZ25ZTY2sNmYwD5haB+U6qcfdpr542rPb6RsJOA="

  services:
    - service: set_servo
      variables:
        level: float
      then:
        - servo.write:
            id: my_servo
            level: !lambda 'return level / 100.0;'
#        - light.turn_on:
#            id: status_led
#        - delay: 0.5s
#        - light.turn_off:
#            id: status_led

# Example configuration entry
servo:
  - id: my_servo
    output: ledc_output

# Example output platform
# On ESP32, use ledc output
output:
  - platform: ledc
    pin: GPIO4
    id: ledc_output
    frequency: 50 Hz


captive_portal:

ota:


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-06E4A8"
    password: "hWiONPBP6AXk"

web_server:
  port: 80
  auth:
    username: 'sebastian'
    password: 'esphome'

number:
  # Select the correct pulse rate for your meter
  - platform: template
    id: select_pulse_rate
    name: 'position'
    icon: mdi:flash-outline
    optimistic: true
    mode: box
    min_value: -100
    max_value: 100
    step: 1
    restore_value: yes
    initial_value: 0


